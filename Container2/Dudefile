import dude
import sys
sys.path.append(".")
import Benchmark

dude_version = 3
name         = "memchached Experiment"

timeout         = 150

raw_output_dir = "raw-throughput-latency"
sum_output_dir = "output-throughput-latency"

localDir        = "."

optspace = {
    "rate"    : [1000, 2000, 5000, 10000, 20000, 30000, 50000, 100000, 200000, 300000, 500000, 1000000],
}

SSHHost    = "172.0.0.2"
SSHPort    = 22
MEMCACHEDPort = 11222
 
class Statistics (dude.summaries.FilesLineSelect):
    def __init__(self, n, h, folder = localDir):
        dude.summaries.FilesLineSelect.__init__(
            self,
            name   = n,
            regex = '^[0-9]+.*',
            header = h,
            files  = folder + '/' + n,
            fname_header = 'none',
            fname_split  = (lambda fname: "1"),
            ) 

summaries = [Statistics("stats.csv", "requests latency")]

def setDefault(optpt, key, value):
    if key not in optpt.keys(): optpt[key] = value   

def cmdl_exp(optpt):
    return "./run-experiment.sh"
    
def prepare_global():
    print ""

def prepare_exp(optpt):
    setDefault(optpt, "callRate",  1000000)
    setDefault(optpt, "numCalls",  optpt["rate"])
    setDefault(optpt, "connRate", 1)
    setDefault(optpt, "numConns", 1)
   

    Benchmark.prepare_exp(SSHHost, SSHPort, MEMCACHEDPort, optpt)

def finish_exp(optpt, status):
    print ""
